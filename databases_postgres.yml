- name: Install PostgreSQL and create databases
  hosts: database

  become: true
  vars:
    postgres_user: postgres
    postgres_password: postgres
    databases:
      - jbpm
      - gh-bpm-applications
      - gh-bpm-localization
  handlers:
    - name: Restart PostgreSQL
      become: true
      service:
        name: postgresql
        state: restarted


  tasks:
    - name: Install PostgreSQL
      apt:
        name:
          - python3-psycopg2
          - postgresql
        state: present
        update_cache: yes

    - name: Ensure PostgreSQL is started and enabled
      systemd:
        name: postgresql
        enabled: yes
        state: started

    - name: Create databases
      become_user: postgres
      postgresql_db:
        name: "{{ item }}"
        encoding: UTF8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        template: template0
        state: present
      loop: "{{ databases }}"
    - name: Set password for postgres user
      become_user: postgres
      postgresql_user:
        name: postgres
        password: "{{ postgres_password }}"
    - name: Get installed PostgreSQL version
      shell: "psql -V | awk '{print $3}' | cut -d. -f1"
      become_user: postgres
      register: postgres_version

    - name: Set PostgreSQL config path
      set_fact:
        pg_conf_path: "/etc/postgresql/{{ postgres_version.stdout }}/main"
    - name: Allow remote access in pg_hba.conf
      become: true
      lineinfile:
        path: "{{ pg_conf_path }}/pg_hba.conf"
        line: "host    all             all             192.168.2.0/24           md5"
        state: present
        insertafter: EOF
      notify: Restart PostgreSQL
    - name: Allow password auth for local postgres user
      lineinfile:
        path: "{{ pg_conf_path }}/pg_hba.conf"
        regexp: '^local\s+all\s+postgres\s+peer'
        line: 'local   all             postgres                                md5'
        state: present
      notify: Restart PostgreSQL

    - name: Allow PostgreSQL to listen on all interfaces
      become: true
      lineinfile:
        path: "{{ pg_conf_path }}/postgresql.conf"
        regexp: '^#?listen_addresses\s*='
        line: "listen_addresses = '*'"
        state: present
      notify: Restart PostgreSQL
